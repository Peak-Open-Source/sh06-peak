
stages:
  - lint
  - test
  - build
  - release

variables:
  PYTHON_VERSION: "3.11.7"

run_linting:
  stage: lint
  
  image: python:$PYTHON_VERSION

  script:
    - pip install flake8
    - flake8

run_tests:
  stage: test
  
  image: python:$PYTHON_VERSION
  
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - pip install -r ./requirements.txt
  
  script:
    - pytest

build_image:
  stage: build

  image: docker:24
  services:
   - docker:24-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_NAME: $HARBOR_HOST/$HARBOR_PROJECT/pss_microservice
    IMAGE_TAG: latest
  
  before_script:
    - docker login -u $HARBOR_USERNAME -p $HARBOR_PASSWORD $HARBOR_HOST
  
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG ./PSS_microservice
    - docker push $IMAGE_NAME:$IMAGE_TAG

  only:
    - main
    - feature/pipeline/master

build_cli_linux:
  stage: build
  image: python:$PYTHON_VERSION
  script:
    - pip install pyinstaller
    - pyinstaller --onefile --distpath "./temp/linux/dist" --workpath "./temp/linux/build" --specpath "./temp/linux" --name ProteinCLI "cli/ProteinClient.py"
  artifacts:
    paths:
      - ./temp/linux/dist/ProteinCLI
  only:
    - main
    - feature/pipeline/master



# build_cli_windows:
#   stage: build
#   image: python:3.11-windowsservercore-ltsc2022
#   script:
#     - pip install pyinstaller
#     - pyinstaller --onefile --distpath "./temp/win/dist" --workpath "./temp/win/build" --specpath "./temp/win" --name ProteinCLI "cli/ProteinClient.py"
#   artifacts:
#     paths:
#       - temp/win/dist/ProteinClient.exe
#   only:
#     - main
#     - "feature/pipeline/master"


release_main:
  stage: release

  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  # Do not run this job when a tag is created manually
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Run this job when commits are pushed or merged to the default branch
  script:
    - echo "running release_job for $TAG"
  release:                                         # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: 'v0.$CI_PIPELINE_IID'                # The version is incremented per pipeline.
    description: 'v0.$CI_PIPELINE_IID'
    ref: '$CI_COMMIT_SHA'   
    # assets:
    #   links:
    #     - name: 'CLI'
    #       url: './temp/linux/dist/ProteinCLI'
  artifacts:
    paths: ['./temp/linux/dist/ProteinCLI']    # The tag is created from the pipeline SHA.

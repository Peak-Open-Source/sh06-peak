
stages:
  - test
  - build
  - release

variables:
  PYTHON_VERSION: "3.11.7"

run_tests:
  stage: test
  
  image: python:$PYTHON_VERSION
  
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - pip install -r ./requirements.txt
  
  script:
    - pytest

  except:
    - feature/pipeline/master

build_image:
  stage: build

  image: docker:24
  services:
   - docker:24-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_NAME: $HARBOR_HOST/$HARBOR_PROJECT/pss_microservice
    IMAGE_TAG: latest
  
  before_script:
    - docker login -u $HARBOR_USERNAME -p $HARBOR_PASSWORD $HARBOR_HOST
  
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG ./PSS_microservice
    - docker push $IMAGE_NAME:$IMAGE_TAG

  only:
    - main
    - feature/pipeline/master

build_cli_linux:
  stage: build
  image: python:$PYTHON_VERSION
  script:
    - pip install pyinstaller
    - pyinstaller --onefile --distpath "./temp/linux/dist" --workpath "./temp/linux/build" --specpath "./temp/linux" --name ProteinCLI "cli/ProteinClient.py"
  artifacts:
    paths:
      - ./temp/linux/dist/ProteinCLI
  only:
    - main
    - feature/pipeline/master



# build_cli_windows:
#   stage: build
#   image: python:3.11-windowsservercore-ltsc2022
#   script:
#     - pip install pyinstaller
#     - pyinstaller --onefile --distpath "./temp/win/dist" --workpath "./temp/win/build" --specpath "./temp/win" --name ProteinCLI "cli/ProteinClient.py"
#   artifacts:
#     paths:
#       - temp/win/dist/ProteinClient.exe
#   only:
#     - main
#     - "feature/pipeline/master"


# release_cli_linux:
#   stage: release

# release_cli_windows:
#   stage: release
